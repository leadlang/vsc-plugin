name: Build librust wrapper

on:
  push:
    paths:
      - librust/package.json

permissions: write-all

jobs:
  tag:
    name: Get Tag + Release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.ver.outputs.TAG_NAME }}
      upload: ${{ steps.release.outputs.upload_url }}
      id: ${{ steps.release.outputs.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4

      - name: Get Tag
        run: |
          node ver.cjs

          sh ./build.sh
        working-directory: librust
        id: ver

      - name: Create Release
        uses: shogo82148/actions-create-release@v1
        id: release
        with:
          tag_name: ${{ steps.ver.outputs.TAG_NAME }}
          prerelease: ${{ github.event_name == 'push' }}
          generate_release_notes: true
          release_name: librust v${{ steps.ver.outputs.TAG_NAME }}
          body: librust NodeJS wrapper
          draft: true

  build:
    name: Build librust wrapper (${{ matrix.target }})

    needs: [tag]

    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-22.04-arm
            target: aarch64-unknown-linux-gnu

          - os: macos-latest
            target: x86_64-apple-darwin

          - os: macos-latest
            target: aarch64-apple-darwin

          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: windows-latest
            target: aarch64-pc-windows-msvc

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4

      - name: Build
        run: |
          rustup toolchain install nightly-${{ matrix.target }}

          cd librust
          npm i -g pnpm

          pnpm install
          pnpm build --target ${{ matrix.target }}

      - name: Publish Leadman SO
        uses: shogo82148/actions-upload-release-asset@v1
        if: runner.os == 'Linux'
        with:
          asset_path: ./liblead/index.node
          asset_name: ${{ matrix.target }}.node
          upload_url: ${{ needs.tag.outputs.upload }}

  publish:
    name: Undraft Release
    needs: [tag, build]
    runs-on: ubuntu-latest

    steps:
      - name: Initial Commit
        uses: actions/checkout@v4

      - name: Publish Leadman Build
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          asset_path: ./leadman/build
          asset_name: build
          overwrite: true
          upload_url: ${{ needs.tag.outputs.upload }}

      - name: Undraft release
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ needs.tag.outputs.id }},
              draft: false
            })
